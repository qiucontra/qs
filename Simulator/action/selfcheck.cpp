#include "stdafx.h"
#include "selfcheck.h"
#include "../RadioStation.h"
#include "../SimulatorDlg.h"

int SelfCheck::PanelTest()
{
	return true;
}
int SelfCheck::ServiceTest()
{
	return true;
}
int SelfCheck::MFSTest()
{
	return true;
}
int SelfCheck::RFTest()
{
	return true;
}
int SelfCheck::PowerTest()
{
	return true;
}
int SelfCheck::TDTest()
{
	return true;
}

void SelfCheck::Init(void * pStation)
{
	RadioStation * station = (RadioStation *)pStation;
	CSimulatorDlg * dlg = (CSimulatorDlg *)station->m_pDlg;

#if defined PIXEL_256X128
	#define STATE_BMP_W	16
	#define STATE_BMP_H	16
	//综合业务自检状态图片signal0.bmp  16X16
	unsigned int state[]={
		0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xffffff, 0xffffff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
		0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xffffff, 0xffffff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
		0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xffffff, 0xffffff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
		0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xffffff, 0xffffff, 0x0, 0x0, 0x0, 0x0, 0x0, 
		0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xffffff, 0xffffff, 0x0, 0x0, 0x0, 0x0, 
		0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xffffff, 0xffffff, 0x0, 0x0, 0x0, 
		0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xffffff, 0xffffff, 0x0, 0x0, 
		0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xffffff, 0xffffff, 0x0, 0x0, 0x0, 
		0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xffffff, 0xffffff, 0x0, 0x0, 0x0, 0x0, 
		0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xffffff, 0xffffff, 0x0, 0x0, 0x0, 0x0, 0x0, 
		0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xffffff, 0xffffff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
		0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xffffff, 0xffffff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
		0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xffffff, 0xffffff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
		0x0, 0x0, 0x0, 0x0, 0x0, 0xffffff, 0xffffff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
		0x0, 0x0, 0x0, 0x0, 0xffffff, 0xffffff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
		0x0, 0x0, 0x0, 0xffffff, 0xffffff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
	};

	const unsigned selfcheck_x = 64;
	const unsigned selfcheck_y = 56;
	const unsigned sx = 10;
	const unsigned sx1 = 85;
	const unsigned delta_x = 128;
	const unsigned sy = 14;
	const unsigned delta_y = 38;
#elif defined PIXEL_128X64
	#define STATE_BMP_W	10
	#define STATE_BMP_H	10

	unsigned int state[]={
		0x0, 0x0, 0x0, 0x0, 0xffffff, 0x0, 0x0, 0x0, 
		0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xffffff, 
		0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
		0x0, 0x0, 0xffffff, 0x0, 0x0, 0x0, 0x0, 0x0, 
		0x0, 0x0, 0x0, 0x0, 0x0, 0xffffff, 0x0, 0x0, 
		0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xffffff, 0x0, 
		0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xffffff, 
		0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
		0xffffff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
		0x0, 0xffffff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
		0x0, 0x0, 0xffffff, 0x0, 0x0, 0x0, 0x0, 0x0, 
		0x0, 0x0, 0x0, 0xffffff, 0x0, 0x0, 0x0, 0x0, 
		0x0, 0x0, 0x0, 0x0
	};

	const unsigned selfcheck_x = 32;
	const unsigned selfcheck_y = 30;
	const unsigned sx = 2;
	const unsigned sx1 = 52;
	const unsigned delta_x = 64;
	const unsigned sy = 5;
	const unsigned delta_y = 20;
#endif

	Display::Clear();
	Display::PrintString("系统自检中", selfcheck_x, selfcheck_y, FONT_MID);
	dlg->Draw();
	Sleep(10);

	Display::Clear();
	Display::PrintString("面板模块", sx, sy, FONT_SMALL);
	Display::PrintString("综合业务", sx+delta_x, sy, FONT_SMALL);
	Display::PrintString("中频频合", sx, sy+delta_y, FONT_SMALL);
	Display::PrintString("射频模块", sx+delta_x, sy+delta_y, FONT_SMALL);
	Display::PrintString("电源模块", sx, sy+delta_y*2, FONT_SMALL);
	Display::PrintString("时分模块", sx+delta_x, sy+delta_y*2, FONT_SMALL);

	if (SelfCheck::PanelTest() == true){
		Display::DrawImage(sx1, sy, STATE_BMP_W, STATE_BMP_H, state);
	}
	if (SelfCheck::ServiceTest() == true){
		Display::DrawImage(sx1+delta_x, sy, STATE_BMP_W, STATE_BMP_H, state);
	}
	if (SelfCheck::MFSTest() == true){
		Display::DrawImage(sx1, sy+delta_y, STATE_BMP_W, STATE_BMP_H, state);
	}
	if (SelfCheck::RFTest() == true){
		Display::DrawImage(sx1+delta_x, sy+delta_y, STATE_BMP_W, STATE_BMP_H, state);
	}
	if (SelfCheck::PowerTest() == true){
		Display::DrawImage(sx1, sy+delta_y*2, STATE_BMP_W, STATE_BMP_H, state);
	}
	if (SelfCheck::TDTest() == true){
		Display::DrawImage(sx1+delta_x, sy+delta_y*2, STATE_BMP_W, STATE_BMP_H, state);
	}
	dlg->Draw();
	Sleep(500);
}